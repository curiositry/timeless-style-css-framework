// MIXINS
// ----------
// NOTE: the "type-typescale()", "type-headings()", and "type-headings-style()"
// are mixins from Typeplate that I have only slightly modified, and are
// probably close enough to be convered by typeplateâ€™s licence.
// Typeplate is a neat MIT licenced starter kit, but more complex than I needed.
// Find it here: http://github.com/typeplate/starter-kit

/// Solid little media query mixin with four options
@mixin bp($point) {
  @if $point == lg {
    @media all and (min-width: 960px) { // Desktop+
      @content;
    }
  } @else if $point == md {
    @media all and (min-width: 800px) { // Tablet+
      @content;
    }
  } @else if $point == sm {
    @media all and (min-width: 640px) { // Phone+
      @content;
    }
  } @else if $point == mbl {
    @media all and (max-width: 640px) { // Phone-
      @content;
    }
  }
}

@mixin type-typescale($scale, $base, $value, $measure: '') {
  font-size: $scale * 1px;
  // @if $value == rem {
  //   font-size: $scale * 1px;
  //   font-size: (($scale/$base) * 0.8) + $value;
  //
  //   @include bp(md) {
  //     font-size: $scale * 1px;
  //     font-size: (($scale/$base) * 0.8) + $value;
  //   }
  //   @include bp(lg) {
  //     font-size: $scale * 1px;
  //     font-size: (($scale/$base) * 1) + $value;
  //   }
  // } @else if $value == em {
  //   font-size: ($scale/$base) + $value;
  // } @else {
  //   font-size: $scale * 1px;
  // }
  //
  // @if $measure != '' {
  //   @if $value == rem {
  //     margin-bottom: type-measure-margin($scale, $measure, $value: px);
  //     margin-bottom: type-measure-margin($scale, $measure, $value);
  //   } @else if $value == em {
  //     margin-bottom: type-measure-margin($scale, $measure, $value: em);
  //   } @else {
  //     margin-bottom: type-measure-margin($scale, $measure, $value);
  //   }
  // }
}

@mixin type-headings() {
  @each $name, $size in $type-scale {
    .#{$name} {
      @include type-typescale(
      $size,
      $font-base,
      rem,
      $measure
      );
    }
  }
}

@mixin type-headings-style() {
  @each $h, $size in $type-headings {
    #{$h} {
      @extend .#{$size};
    }
  }
}
